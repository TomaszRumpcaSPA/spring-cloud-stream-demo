server.port=9001

# rabbit properties
spring.rabbitmq.host=${RABBITMQ_HOST:daidalos-rabbitmq}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.virtual-host=${RABBITMQ_VHOST:finion}
spring.rabbitmq.username=${RABBITMQ_USER:finion}
spring.rabbitmq.password=changeme
spring.rabbitmq.ssl.enabled=false

# Spring cloud stream properties
# Both producer and consumer could create an exchange

spring.cloud.stream.function.definition: paymentPublisher;consumerImplementation

# producer
spring.cloud.stream.bindings.paymentPublisher-out-0.destination=myExchange
#spring.cloud.stream.bindings.publisher-out-0.content-type=application/json
#spring.cloud.stream.rabbit.bindings.publisher-out-0.producer.routing-key-expression='example'

# consumer
# Only consumers create a queue
spring.cloud.stream.bindings.consumerImplementation-in-0.destination=myExchange
#spring.cloud.stream.bindings.consumerImplementation-in-0.content-type=application/json
spring.cloud.stream.bindings.consumerImplementation-in-0.group=input
#spring.cloud.stream.rabbit.bindings.consumerImplementation-in-0.consumer.binding-routing-key=example